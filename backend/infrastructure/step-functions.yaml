AWSTemplateFormatVersion: '2010-09-09'
Description: 'AI Chef Step Functions - Simplified Lambda-managed DynamoDB'

Parameters:
  Environment:
    Type: String
    Default: dev

Resources:
  # Step Functions Execution Role
  StepFunctionsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaInvokePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: '*'

  # Step Functions State Machine - Simplified
  RecipeWorkflowStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub 'ai-chef-workflow-${Environment}'
      RoleArn: !GetAtt StepFunctionsRole.Arn
      DefinitionString: |
        {
          "Comment": "AI Chef Simplified Workflow - Lambda manages DynamoDB",
          "StartAt": "OrchestrateSession",
          "States": {
            "OrchestrateSession": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "ai-chef-orchestrator-dev",
                "Payload.$": "$"
              },
              "ResultPath": "$.sessionResult",
              "Next": "GenerateRecipe"
            },
            "GenerateRecipe": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "ai-chef-recipe-dev",
                "Payload.$": "$"
              },
              "ResultSelector": {
                "recipe.$": "$.Payload.body"
              },
              "ResultPath": "$.recipeResult",
              "Retry": [
                {
                  "ErrorEquals": ["Lambda.ServiceException", "Lambda.AWSLambdaException"],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 3,
                  "BackoffRate": 2.0
                }
              ],
              "Next": "FetchPrices"
            },
            "FetchPrices": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "ai-chef-price-dev",
                "Payload": {
                  "sessionId.$": "$.sessionId",
                  "profile.$": "$.profile",
                  "ingredients.$": "$.recipeResult.recipe.ingredients"
                }
              },
              "ResultSelector": {
                "pricing.$": "$.Payload.body"
              },
              "ResultPath": "$.pricingResult",
              "Retry": [
                {
                  "ErrorEquals": ["Lambda.ServiceException", "Lambda.AWSLambdaException"],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 3,
                  "BackoffRate": 2.0
                }
              ],
              "Next": "CombineResults"
            },
            "CombineResults": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "ai-chef-combine-dev",
                "Payload": {
                  "sessionId.$": "$.sessionId",
                  "profile.$": "$.profile",
                  "recipeResult.$": "$.recipeResult.recipe",
                  "pricingResult.$": "$.pricingResult.pricing"
                }
              },
              "End": true
            }
          }
        }

Outputs:
  StateMachineArn:
    Description: 'Simplified Step Functions State Machine ARN'
    Value: !Ref RecipeWorkflowStateMachine
    Export:
      Name: !Sub '${AWS::StackName}-StateMachineArn'
