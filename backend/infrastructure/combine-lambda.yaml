AWSTemplateFormatVersion: '2010-09-09'
Description: 'AI Chef Combine Lambda Function - Secrets Manager Version'

Resources:
  # Lambda Execution Role
  CombineLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: 
                  - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ai-chef-sessions'

  # Combine Lambda Function
  CombineLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: 'ai-chef-combine'
      Runtime: python3.11
      Handler: lambda_function.lambda_handler
      Role: !GetAtt CombineLambdaRole.Arn
      Timeout: 30
      MemorySize: 128
      Environment:
        Variables:
          SESSIONS_TABLE_NAME: 'ai-chef-sessions'
      Code:
        ZipFile: |
          # Placeholder - will be replaced by deployment script with actual ZIP file
          import json
          def lambda_handler(event, context):
              return {'statusCode': 200, 'body': {'message': 'Placeholder function'}}

Outputs:
  CombineLambdaArn:
    Description: 'Combine Lambda Function ARN'
    Value: !GetAtt CombineLambda.Arn
    Export:
      Name: !Sub '${AWS::StackName}-CombineLambdaArn'
