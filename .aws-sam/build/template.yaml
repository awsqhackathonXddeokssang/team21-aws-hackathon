AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AI Chef Complete Backend Infrastructure
Globals:
  Function:
    Runtime: python3.11
    Timeout: 30
    MemorySize: 256
    Environment:
      Variables:
        SESSIONS_TABLE_NAME:
          Ref: SessionsTable
        RESULTS_TABLE_NAME:
          Ref: ResultsTable
  Api:
    Cors:
      AllowMethods: '''GET,POST,PUT,DELETE,OPTIONS'''
      AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
      AllowOrigin: '''*'''
Resources:
  SessionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ai-chef-sessions
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: sessionId
        AttributeType: S
      KeySchema:
      - AttributeName: sessionId
        KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: TTL
        Enabled: true
  ResultsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ai-chef-results
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: sessionId
        AttributeType: S
      KeySchema:
      - AttributeName: sessionId
        KeyType: HASH
  NutritionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ai-chef-nutrition
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: ingredient
        AttributeType: S
      KeySchema:
      - AttributeName: ingredient
        KeyType: HASH
  AiChefApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: ai-chef-api
      StageName: prod
  SessionCreateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ai-chef-session-create
      CodeUri: SessionCreateFunction
      Handler: index.handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SessionsTable
      Events:
        CreateSession:
          Type: Api
          Properties:
            RestApiId:
              Ref: AiChefApi
            Path: /sessions
            Method: post
    Metadata:
      SamResourceId: SessionCreateFunction
  SessionUpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ai-chef-session-update
      CodeUri: SessionUpdateFunction
      Handler: index.handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SessionsTable
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - bedrock:InvokeModel
          Resource: '*'
      Events:
        UpdateSession:
          Type: Api
          Properties:
            RestApiId:
              Ref: AiChefApi
            Path: /sessions/update
            Method: post
    Metadata:
      SamResourceId: SessionUpdateFunction
  SessionStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ai-chef-session-status
      CodeUri: SessionStatusFunction
      Handler: index.handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SessionsTable
      Events:
        GetStatus:
          Type: Api
          Properties:
            RestApiId:
              Ref: AiChefApi
            Path: /sessions/{sessionId}/status
            Method: get
    Metadata:
      SamResourceId: SessionStatusFunction
  RecipeFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ai-chef-recipe
      CodeUri: RecipeFunction
      Handler: index.handler
      Timeout: 300
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SessionsTable
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - bedrock:InvokeModel
          Resource: '*'
    Metadata:
      SamResourceId: RecipeFunction
  RecipeWithRagFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ai-chef-create-recipe-with-rag
      CodeUri: RecipeWithRagFunction
      Handler: index.handler
      Timeout: 300
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SessionsTable
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - bedrock:InvokeModel
          Resource: '*'
    Metadata:
      SamResourceId: RecipeWithRagFunction
  PriceFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ai-chef-price
      CodeUri: PriceFunction
      Handler: index.handler
      Timeout: 60
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SessionsTable
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          Resource: '*'
    Metadata:
      SamResourceId: PriceFunction
  NutritionCalculatorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ai-chef-nutrition-calculator
      CodeUri: NutritionCalculatorFunction
      Handler: index.handler
      Timeout: 60
      Environment:
        Variables:
          NUTRITION_TABLE_NAME:
            Ref: NutritionTable
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SessionsTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: NutritionTable
    Metadata:
      SamResourceId: NutritionCalculatorFunction
  NutritionLookupFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ai-chef-recipe-nutrition-lookup
      CodeUri: NutritionLookupFunction
      Handler: index.handler
      Environment:
        Variables:
          NUTRITION_TABLE_NAME:
            Ref: NutritionTable
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: NutritionTable
    Metadata:
      SamResourceId: NutritionLookupFunction
  NutritionInitializerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ai-chef-nutrition-data-initializer
      CodeUri: NutritionInitializerFunction
      Handler: index.handler
      Timeout: 300
      Environment:
        Variables:
          NUTRITION_TABLE_NAME:
            Ref: NutritionTable
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: NutritionTable
    Metadata:
      SamResourceId: NutritionInitializerFunction
  RecipeImageGeneratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ai-chef-recipe-image-generator
      CodeUri: RecipeImageGeneratorFunction
      Handler: index.handler
      Timeout: 60
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SessionsTable
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - bedrock:InvokeModel
          Resource: '*'
    Metadata:
      SamResourceId: RecipeImageGeneratorFunction
  ProcessFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ai-chef-process
      CodeUri: ProcessFunction
      Handler: index.handler
      Timeout: 300
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SessionsTable
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - states:StartExecution
          Resource:
            Ref: AiChefWorkflow
      Events:
        ProcessSession:
          Type: Api
          Properties:
            RestApiId:
              Ref: AiChefApi
            Path: /sessions/{sessionId}/process
            Method: post
    Metadata:
      SamResourceId: ProcessFunction
  CombineFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ai-chef-combine
      CodeUri: CombineFunction
      Handler: index.handler
      Timeout: 60
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SessionsTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ResultsTable
    Metadata:
      SamResourceId: CombineFunction
  ResultFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ai-chef-result
      CodeUri: ResultFunction
      Handler: index.handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ResultsTable
      Events:
        GetResult:
          Type: Api
          Properties:
            RestApiId:
              Ref: AiChefApi
            Path: /results/{sessionId}
            Method: get
    Metadata:
      SamResourceId: ResultFunction
  AiChefWorkflow:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: ai-chef-workflow
      Definition:
        Comment: AI Chef Recipe Generation Workflow
        StartAt: ParallelProcessing
        States:
          ParallelProcessing:
            Type: Parallel
            Branches:
            - StartAt: GenerateRecipe
              States:
                GenerateRecipe:
                  Type: Task
                  Resource:
                    Fn::GetAtt:
                    - RecipeFunction
                    - Arn
                  End: true
            - StartAt: GetPriceInfo
              States:
                GetPriceInfo:
                  Type: Task
                  Resource:
                    Fn::GetAtt:
                    - PriceFunction
                    - Arn
                  End: true
            - StartAt: CalculateNutrition
              States:
                CalculateNutrition:
                  Type: Task
                  Resource:
                    Fn::GetAtt:
                    - NutritionCalculatorFunction
                    - Arn
                  End: true
            Next: CombineResults
          CombineResults:
            Type: Task
            Resource:
              Fn::GetAtt:
              - CombineFunction
              - Arn
            End: true
      Policies:
      - LambdaInvokePolicy:
          FunctionName:
            Ref: RecipeFunction
      - LambdaInvokePolicy:
          FunctionName:
            Ref: PriceFunction
      - LambdaInvokePolicy:
          FunctionName:
            Ref: NutritionCalculatorFunction
      - LambdaInvokePolicy:
          FunctionName:
            Ref: CombineFunction
Outputs:
  ApiGatewayUrl:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${AiChefApi}.execute-api.${AWS::Region}.amazonaws.com/prod
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-ApiUrl
  SessionsTableName:
    Description: DynamoDB Sessions Table Name
    Value:
      Ref: SessionsTable
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-SessionsTable
  ResultsTableName:
    Description: DynamoDB Results Table Name
    Value:
      Ref: ResultsTable
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-ResultsTable
